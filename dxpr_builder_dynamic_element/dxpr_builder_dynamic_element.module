<?php

use Drupal\Core\Extension\ModuleHandlerInterface;
use Drupal\Core\Render\Markup;

/**
 * Implements hook_library_info_alter().
 */
function dxpr_builder_dynamic_element_library_info_alter(array &$libraries, $extension) {
  // Process only libraries from the 'dxpr_builder' extension.
  if ($extension !== 'dxpr_builder') {
    return;
  }

  // Retrieve the path to the module to construct script URLs.
  $module_handler = \Drupal::service('module_handler');
  $base_path = '/' . $module_handler->getModule('dxpr_builder_dynamic_element')->getPath() . '/js/';

  // Define the paths to JavaScript files used in different environments.
  $scripts = [
    'development' => $base_path . 'dynamic_element.js',
    'production' => $base_path . 'dynamic_element.js', // minified version
    'frontend' => $base_path . 'dynamic_element_frontend.js'
  ];

  // Define which library keys will use which scripts.
  $library_keys = [
    'editor.builder' => 'development',
    'production' => 'production',
    'development' => 'development',
    'editor.frontend' => 'frontend',
    'editor.frontend_dev' => 'frontend'
  ];

  // Loop through the defined keys and assign scripts with weights.
  foreach ($library_keys as $key => $script_key) {
    $weight = 0;  // Default weight.
    switch ($key) {
      case 'editor.builder':
      case 'development':
      case 'production':
        $weight = -4;  // Load before dxpr_elements.js.
        break;
      case 'editor.frontend':
      case 'editor.frontend_dev':
        $weight = -1;  // Load before dxpr_frontend.js.
        break;
    }
    // Assign the script with the calculated weight to the library.
    $libraries[$key]['js'][$scripts[$script_key]] = ['weight' => $weight];
  }
}
